name: Multi-Stage PR Review v3

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  contents: read
  pull-requests: write
  id-token: write

jobs:
  # Stage 0: Setup and file filtering
  setup:
    name: Setup Review
    runs-on: ubuntu-latest
    outputs:
      files_changed: ${{ steps.changed-files.outputs.any_changed }}
      pr_number: ${{ github.event.pull_request.number }}
      commit_sha: ${{ github.event.pull_request.head.sha }}
      changed_files_list: ${{ steps.format-files.outputs.files }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            **/*.rs
            **/*.ts
            **/*.tsx
            
      - name: Format Files List
        id: format-files
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

  # Stage 1: Check for StorageHub-specific issues
  analyze:
    name: Run PR Checks
    needs: setup
    if: needs.setup.outputs.files_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Run Analysis
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: "claude-4-0-sonnet-20250219"
          allowed_tools: "Bash,Read,Grep"
          direct_prompt: |
            /project:pr_checks
        env:
          CHANGED_FILES: ${{ needs.setup.outputs.changed_files_list }}
          COMMIT_SHA: ${{ needs.setup.outputs.commit_sha }}
          ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
          ANTHROPIC_AUTH_TOKEN: ${{ secrets.ANTHROPIC_AUTH_TOKEN }}
          
      - name: Upload Raw Findings
        uses: actions/upload-artifact@v4
        with:
          name: raw-findings
          path: raw-findings/
          if-no-files-found: error

  # Stage 2: Verify findings to filter false positives
  verify:
    name: Verify Findings
    needs: [setup, analyze]
    runs-on: ubuntu-latest
    if: needs.setup.outputs.files_changed == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Raw Findings
        uses: actions/download-artifact@v4
        with:
          name: raw-findings
          path: raw-findings/
          
      - name: Run Verification
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: "claude-4-0-sonnet-20250219"
          allowed_tools: "Read,Bash"
          direct_prompt: |
            /project:verify_findings raw-findings/ verified-findings/
        env:
          ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
          ANTHROPIC_AUTH_TOKEN: ${{ secrets.ANTHROPIC_AUTH_TOKEN }}
          
      - name: Upload Verified Findings
        uses: actions/upload-artifact@v4
        with:
          name: verified-findings
          path: verified-findings/
          if-no-files-found: error

  # Stage 3: Post review comments
  post-comments:
    name: Post Review Comments
    needs: [setup, verify]
    runs-on: ubuntu-latest
    if: needs.setup.outputs.files_changed == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Verified Findings
        uses: actions/download-artifact@v4
        with:
          name: verified-findings
          path: verified-findings/
          
      - name: Post Comments with Claude
        uses: anthropics/claude-code-action@beta
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: "claude-4-0-sonnet-20250219"
          allowed_tools: "Read,Bash,mcp__github__create_pending_pull_request_review,mcp__github__add_pull_request_review_comment_to_pending_review,mcp__github__submit_pending_pull_request_review"
          direct_prompt: |
            Read all JSON files in the verified-findings/ directory.
            
            # NEW: Gather the list of files actually modified in this PR so we can validate that each
            # finding maps to a line that GitHub will accept for an inline comment.  The newline-separated
            # list is available in the environment variable `CHANGED_FILES`.

            ## Comment-posting algorithm (robust-mode)
            # 1. Create a pending review with mcp__github__create_pending_pull_request_review.
            # 2. For each finding in the verified JSON files **whose `path` appears in CHANGED_FILES**:
            #      a. Attempt to add an inline comment with mcp__github__add_pull_request_review_comment_to_pending_review
            #         using the provided `path` and `line`.
            #      b. Inspect the tool result.  If it contains an error (for example HTTP 422 because the
            #         line is outside the diff hunk) **retry once** as a file-level comment by omitting
            #         `line` and setting `subjectType` to `FILE`.
            #      c. If the retry also fails, skip the finding and record it in an internal `skipped`
            #         list so the summary can mention any dropped comments.
            # 3. After processing all findings, submit the review with mcp__github__submit_pending_pull_request_review.

            ## Review summary must include:
            #  - Total number of findings processed
            #  - Number of successfully attached comments
            #  - Number of comments skipped because they were outside the diff context
            #  - Breakdown by severity (BUG, SECURITY, PERFORMANCE, SUGGESTION)

            If no findings exist (empty arrays) still create and submit a review comment saying
            "âœ… Automated review found no issues."  Ensure that at least one comment (summary) is posted.
            
            The review summary should include:
            - Total number of findings processed
            - Number of successfully attached comments
            - Number of comments skipped because they were outside the diff context
            - Breakdown by severity (BUG, SECURITY, PERFORMANCE, SUGGESTION)
            
            IMPORTANT: You MUST use the GitHub MCP tools for creating the review. Do not use gh CLI or any other method.
            The PR number is: ${{ needs.setup.outputs.pr_number }}
            Repository: ${{ github.repository }}
        env:
          ANTHROPIC_BASE_URL: ${{ secrets.ANTHROPIC_BASE_URL }}
          ANTHROPIC_AUTH_TOKEN: ${{ secrets.ANTHROPIC_AUTH_TOKEN }}
          # Pass the list of changed files so the prompt logic can validate comment locations
          CHANGED_FILES: ${{ needs.setup.outputs.changed_files_list }}